plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.nc13'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

ext {
    set('springModulithVersion', "1.2.3")
}

dependencies {
//
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
  //  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

//    implementation 'com.siot.Iamport:iamport-rest-client-java:0.2.6'
    implementation 'com.github.iamport:iamport-rest-client-java:0.2.6'


   implementation 'org.springframework.boot:spring-boot-starter-data-jpa'


    compileOnly("org.springframework.boot:spring-boot-devtools")
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    compileOnly "org.springframework.boot:spring-boot-devtools"
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.jsoup:jsoup:1.17.2'
   // implementation 'mysql:mysql-connector-java:8.0.32'
    implementation 'mysql:mysql-connector-java'

    //ncloud
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.300'
    // QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"


    // Querydsl 프로세서 (코드 생성)
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jpa"



    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools
    implementation group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '3.3.2'

    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    //implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.14.1'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.19.1'
    implementation 'org.seleniumhq.selenium:selenium-java:4.19.1'
    implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.19.1'
    implementation 'io.github.bonigarcia:webdrivermanager:5.3.0'

    // thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    //implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'


    //implementation 'org.jsoup:jsoup:1.15.3'
    implementation 'org.jsoup:jsoup:1.14.3'

    implementation 'mysql:mysql-connector-java:8.0.33'

// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools
    implementation group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '3.3.3'



    //oauth2
   // implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'


//    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.522'

    //aws 버킷에 올리려는 설정
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // security
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity6'


}

dependencyManagement {
    imports {
        mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslSrcDir = 'build/generated'
sourceSets {
    main {
        java {
            srcDirs += [ querydslSrcDir ]
        }
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

clean {
    delete file(querydslSrcDir)
}


